import React, { useContext, useEffect, useState } from 'react';
import 'leaflet/dist/leaflet.css';
import './Map.css';
import { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';
import { Box, Typography } from '@mui/material';
import { divIcon } from 'leaflet';
import CustomSvgIcon from '../../utility/icons/CustomSvgIcon';
import { ShowsContext } from '../../pages/Shows/Shows';
import moment from 'moment';
import { genreIcons } from './genreIcons';
import { Link } from 'react-router-dom';

// // TODO make reusable; pass genre to get icon
function createLeafletIcon(type) {
  return genreIcons[type];
}

const handleCustomIcon = (type) => {
  return divIcon({
    html: createLeafletIcon(type),
  });
};

// TODO// hide this key, set up under seatstir
const accessToken = 'Na2RQgNzFkl7IKRZ8OA7nu2cawbcIhOyt78KSl7cS2692Cq2KY6rERTIUxHWeqDS';

const Map = () => {
  const { data, inputsState } = useContext(ShowsContext);
  console.log('ðŸš€ ~ Map ~ inputsState:', inputsState);

  const handleClick = (event) => {
    const map = event.target._map;

    map.flyTo(event.latlng, 14, {
      duration: 1, // Duration of the animation in seconds
      easeLinearity: 0.5, // Smoothness of the animation
    });
  };

  console.log(inputsState.location.coordinates.length || 'hello');
  return (
    <MapContainer
      // TODO get coords from location api or display full US map
      center={inputsState.location.coordinates.length ? inputsState.location.coordinates : [36.1716, -115.1391]}
      zoom={inputsState.location.coordinates.length ? 14 : 11}
      style={{ position: 'absolute', width: '100%', height: '100%', top: 0, left: 0, zIndex: 1350 }}
    >
      <TileLayer
        url={`https://tile.jawg.io/jawg-sunny/{z}/{x}/{y}{r}.png?access-token=${accessToken}`}
        attribution='<a href="https://jawg.io" title="Tiles Courtesy of Jawg Maps" target="_blank">&copy; <b>Jawg</b>Maps</a> &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
      />
      {/* MOVE to seperate component */}
      {data.map((item) => (
        <Marker
          key={item._id}
          position={item.coordinates}
          icon={handleCustomIcon(item.type)}
          eventHandlers={{ click: handleClick }}
        >
          <Popup
            position={[0, 0]}
            // TODO calculate offset based on position
            offset={[-75, 10]}
          >
            <Typography
              sx={{
                fontFamily: 'Kodchasan',
                fontSize: '12px',
                color: '#001F66',
                lineHeight: '16px',
              }}
            >
              {item.type}
            </Typography>
            <Typography
              sx={{
                fontFamily: 'Gravitas One',
                fontSize: '14px',
                color: '#001F66',
                lineHeight: '16px',
              }}
            >
              {item.name}
            </Typography>
            <Box
              sx={{
                display: 'flex',
              }}
            >
              <Box
                sx={{
                  paddingTop: '1px',
                }}
              >
                <CustomSvgIcon
                  viewBox='0 0 12 14'
                  sx={{ color: '#001F66', width: '12px', height: '14px', marginRight: '6px' }}
                >
                  <path d='M6 12.1778L9.3 8.98838C9.9526 8.35758 10.397 7.55392 10.577 6.67902C10.7571 5.80411 10.6646 4.89726 10.3114 4.07313C9.95817 3.249 9.36003 2.54462 8.59261 2.04903C7.82519 1.55345 6.92296 1.28894 6 1.28894C5.07704 1.28894 4.17481 1.55345 3.40739 2.04903C2.63997 2.54462 2.04183 3.249 1.68861 4.07313C1.33539 4.89726 1.24294 5.80411 1.42297 6.67902C1.603 7.55392 2.0474 8.35758 2.7 8.98838L6 12.1778ZM6 14L1.75734 9.89947C0.918228 9.08846 0.346791 8.05518 0.115286 6.93029C-0.11622 5.8054 0.00260456 4.63942 0.456732 3.5798C0.91086 2.52017 1.67989 1.6145 2.66659 0.977301C3.65328 0.340103 4.81332 0 6 0C7.18668 0 8.34672 0.340103 9.33341 0.977301C10.3201 1.6145 11.0891 2.52017 11.5433 3.5798C11.9974 4.63942 12.1162 5.8054 11.8847 6.93029C11.6532 8.05518 11.0818 9.08846 10.2427 9.89947L6 14ZM6 7.0876C6.35362 7.0876 6.69276 6.95183 6.94281 6.71016C7.19286 6.46849 7.33333 6.14071 7.33333 5.79894C7.33333 5.45716 7.19286 5.12939 6.94281 4.88772C6.69276 4.64604 6.35362 4.51027 6 4.51027C5.64638 4.51027 5.30724 4.64604 5.05719 4.88772C4.80714 5.12939 4.66667 5.45716 4.66667 5.79894C4.66667 6.14071 4.80714 6.46849 5.05719 6.71016C5.30724 6.95183 5.64638 7.0876 6 7.0876ZM6 8.37627C5.29276 8.37627 4.61448 8.10473 4.11438 7.62139C3.61429 7.13804 3.33333 6.48249 3.33333 5.79894C3.33333 5.11539 3.61429 4.45984 4.11438 3.97649C4.61448 3.49315 5.29276 3.22161 6 3.22161C6.70724 3.22161 7.38552 3.49315 7.88562 3.97649C8.38571 4.45984 8.66667 5.11539 8.66667 5.79894C8.66667 6.48249 8.38571 7.13804 7.88562 7.62139C7.38552 8.10473 6.70724 8.37627 6 8.37627Z' />
                </CustomSvgIcon>
              </Box>
              <Typography
                sx={{
                  fontFamily: 'Kodchasan',
                  fontSize: '12px',
                  color: '#001F66',
                  lineHeight: '16px',
                }}
              >
                {item.venue.name}
              </Typography>
            </Box>
            <Box
              sx={{
                display: 'flex',
              }}
            >
              <Box
                sx={{
                  paddingTop: '1px',
                }}
              >
                <CustomSvgIcon
                  viewBox='0 0 12 12'
                  sx={{ color: '#001F66', width: '12px', height: '12px', marginRight: '6px' }}
                >
                  <path d='M3.34824 0C2.98087 0 2.68272 0.282947 2.68272 0.631579C1.21125 0.631579 0 1.764 0 3.15789V4.42105L0.020635 9.47368C0.020635 10.8669 1.21258 12 2.68272 12H9.33792C10.8081 12 12 10.8688 12 9.47368L11.9794 4.42105V3.15789C11.9794 1.76147 10.8067 0.631579 9.33792 0.631579C9.33792 0.282947 9.04043 0 8.6724 0C8.30503 0 8.00688 0.282947 8.00688 0.631579H4.01376C4.01376 0.282947 3.71627 0 3.34824 0ZM2.68272 1.89474C2.68272 2.24337 2.98087 2.52632 3.34824 2.52632C3.71627 2.52632 4.01376 2.24337 4.01376 1.89474H8.00688C8.00688 2.24337 8.30503 2.52632 8.6724 2.52632C9.04043 2.52632 9.33792 2.24337 9.33792 1.89474C10.068 1.89474 10.6483 2.45558 10.6483 3.15789V3.78947C9.36786 3.78947 2.6115 3.78947 1.33104 3.78947V3.15789C1.33104 2.46505 1.94266 1.89474 2.68272 1.89474ZM1.33104 5.05263C2.6115 5.05263 9.36786 5.05263 10.6483 5.05263L10.669 9.47368C10.669 10.1691 10.0733 10.7368 9.33792 10.7368H2.68272C1.94798 10.7368 1.35168 10.1716 1.35168 9.47368L1.33104 5.05263Z' />
                </CustomSvgIcon>
              </Box>
              <Typography
                sx={{
                  fontFamily: 'Kodchasan',
                  fontSize: '12px',
                  color: '#001F66',
                  lineHeight: '16px',
                }}
              >
                {/* TODO might need timezone */}
                {moment(item.upcomingEvent).format('ddd, MMMM DD')}
              </Typography>
            </Box>
            <Box
              sx={{
                display: 'flex',
              }}
            >
              <Box
                sx={{
                  paddingTop: '1px',
                }}
              >
                <CustomSvgIcon
                  viewBox='0 0 12 12'
                  sx={{ color: '#001F66', width: '12px', height: '12px', marginRight: '6px' }}
                >
                  <path d='M6 0C2.68628 0 0 2.6865 0 6C0 9.3135 2.68628 12 6 12C9.3135 12 12 9.3135 12 6C12 2.6865 9.3135 0 6 0ZM6 1.5C8.4855 1.5 10.5 3.5145 10.5 6C10.5 8.4855 8.4855 10.5 6 10.5C3.51473 10.5 1.5 8.4855 1.5 6C1.5 3.5145 3.51473 1.5 6 1.5ZM6 3C5.586 3 5.25 3.336 5.25 3.75V6C5.25 6.19875 5.3205 6.39825 5.46075 6.53925L6.96075 8.03925C7.254 8.33175 7.746 8.33175 8.03926 8.03925C8.33175 7.746 8.33175 7.254 8.03926 6.96075L6.75 5.6715V3.75C6.75 3.336 6.414 3 6 3Z' />
                </CustomSvgIcon>
              </Box>
              <Typography
                sx={{
                  fontFamily: 'Kodchasan',
                  fontSize: '12px',
                  color: '#001F66',
                  lineHeight: '16px',
                }}
              >
                {moment(item.upcomingEvent).format('LT')}
              </Typography>
            </Box>
            <Link to={`/shows/${item._id}`}>
              <Typography
                sx={{
                  fontFamily: 'Kodchasan',
                  fontSize: '12px',
                  color: '#001F66',
                  lineHeight: '16px',
                }}
              >
                More Details
              </Typography>
            </Link>
          </Popup>
        </Marker>
      ))}
    </MapContainer>
  );
};

export default Map;
